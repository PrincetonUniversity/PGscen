
import argparse
from pathlib import Path
import pandas as pd
import matplotlib.pyplot as plt
from matplotlib.patches import Patch

plt.style.use('fivethirtyeight')
plt.rcParams['axes.facecolor'] = 'white'
plt.rcParams['savefig.facecolor'] = 'white'
plt.rcParams['axes.edgecolor'] = 'white'
actual_clr, fcst_clr = "#430093", "#D9C800"


def plot_scenarios(scen_data, args):
    fig, ax = plt.subplots(figsize=(13, 8))

    for scen, scen_vals in scen_data.loc['Simulation'].iterrows():
        plt.plot(scen_vals, c='black', alpha=0.11, lw=0.2)

    plt.plot(scen_data.loc['Forecast', 1], c=fcst_clr, alpha=0.47, lw=4.1)
    plt.plot(scen_data.loc['Actual', 1], c=actual_clr, alpha=0.47, lw=4.1)

    quant_df = scen_data.loc['Simulation'].quantile([0.25, 0.75])
    ax.fill_between(quant_df.columns, quant_df.iloc[0], quant_df.iloc[1],
                    color='red', alpha=0.31)

    ax.tick_params(which='both', labelsize=15)
    ax.grid(linewidth=0.7, alpha=0.31)
    ax.axhline(0, lw=1.3, c='black', alpha=1)
    ax.set_ylim((ax.get_ylim()[1] / -67, ax.get_ylim()[1]))

    lgnd_ptchs = [Patch(color='black', alpha=0.23, label="Scenarios"),
                  Patch(color='red', alpha=0.41, label="Interquartile Range"),
                  Patch(color=fcst_clr, alpha=0.81, label="Forecast"),
                  Patch(color=actual_clr, alpha=0.81, label="Actual")]

    plt.legend(handles=lgnd_ptchs, frameon=False, fontsize=17, ncol=4, loc=8,
               bbox_to_anchor=(0.5, -0.17), handletextpad=0.7)

    fig.savefig(Path(args.scen_file.parent.parent, "plots",
                     "scenarios__{}.pdf".format(args.scen_file.stem)),
                bbox_inches='tight', format='pdf')


def main():
    parser = argparse.ArgumentParser()

    parser.add_argument("scen_file", type=Path,
                        help="a .csv containing scenarios generated by PGscen")
    args = parser.parse_args()

    Path(args.scen_file.parent.parent, "plots").mkdir(exist_ok=True)
    scen_data = pd.read_csv(args.scen_file, index_col=[0, 1])
    scen_data.columns = scen_data.columns.str.replace('00$', 'h', regex=True)

    plot_scenarios(scen_data, args)


if __name__ == '__main__':
    main()
